apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{workload}}-{{deployment}}
  namespace: {{organization}}-{{team}}
  labels:
    organization: {{organization}}
    team: {{team}}
    workload: {{workload}}
    deployment: {{deployment}}
  {{#each labels as |kv|}}
    {{kv.key}}: {{kv.value}}
  {{/each}}
spec:
  replicas: {{replicas}}
  selector:
    matchLabels:
      app: {{workload}}
  template:
    metadata:
      labels:
        organization: {{organization}}
        team: {{team}}
        app: {{workload}}
        deployment: {{deployment}}
      {{#each labels as |kv|}}
        {{kv.key}}: {{kv.value}}
      {{/each}}
      annotations:
        linkerd.io/inject: enabled
        prometheus.io/scrape: "true"
        prometheus.io/path: {{metricsEndpoint}}
        prometheus.io/port: "{{containerPort}}"
    spec:
      containers:
      - name: {{workload}}
        image: {{image}}
        imagePullPolicy: Always
        ports:
        - containerPort: {{containerPort}}
        resources:
          limits:
            cpu: {{cpu}}
            memory: {{memory}}
        readinessProbe:
          httpGet:
            path: /health
            port: {{containerPort}} 
          initialDelaySeconds: 10
          periodSeconds: 10
        envFrom:
        - configMapRef:
              name: {{workload}}-{{deployment}}
